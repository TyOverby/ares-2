#test anonymous function call
(fn(){ 1 })()
#bind
FN-CALL:
    RECEIVER:
        LAMBDA:
            NUM-ARGS:
                0
            NUM-UPVARS:
                0
            NUM-DECLARATIONS:
                0
            ARGS:
            BODY:
                BLOCK-EXPRESSION:
                    LITERAL:
                        1
            BINDINGS:
    ARGS:
#emit
CreateClosure(0)
Jump(4)
IntLit(1)
Ret
Execute(0)
#result
1

#test user-fn function call
{ print("hello"); print("world"); }
#bind
BLOCK-STATEMENT:
    FN-CALL:
        RECEIVER:
            SYMBOL:
                NAME:
                    print
                SOURCE:
                    GLOBAL:
                        print
        ARGS:
            LITERAL:
                "hello"
    FN-CALL:
        RECEIVER:
            SYMBOL:
                NAME:
                    print
                SOURCE:
                    GLOBAL:
                        print
        ARGS:
            LITERAL:
                "world"
#emit
LoadConstant(0)
GetGlobal(Symbol(8))
Execute(1)
Pop
LoadConstant(1)
GetGlobal(Symbol(8))
Execute(1)
Pop
#output
hello
world
#result

#test user call from function
(fn() { print("hello world"); 5 })()
#bind
FN-CALL:
    RECEIVER:
        LAMBDA:
            NUM-ARGS:
                0
            NUM-UPVARS:
                0
            NUM-DECLARATIONS:
                0
            ARGS:
            BODY:
                BLOCK-EXPRESSION:
                    FN-CALL:
                        RECEIVER:
                            SYMBOL:
                                NAME:
                                    print
                                SOURCE:
                                    GLOBAL:
                                        print
                        ARGS:
                            LITERAL:
                                "hello world"
                    LITERAL:
                        5
            BINDINGS:
    ARGS:
#emit
CreateClosure(0)
Jump(8)
LoadConstant(0)
GetGlobal(Symbol(8))
Execute(1)
Pop
IntLit(5)
Ret
Execute(0)
#output
hello world
#result
5

#test curried function
(fn outer() {
    print("hello");
    fn inner() {
        print("world");
        10
    }
})()()
#bind
FN-CALL:
    RECEIVER:
        FN-CALL:
            RECEIVER:
                LAMBDA:
                    NUM-ARGS:
                        0
                    NUM-UPVARS:
                        0
                    NUM-DECLARATIONS:
                        0
                    ARGS:
                    BODY:
                        BLOCK-EXPRESSION:
                            FN-CALL:
                                RECEIVER:
                                    SYMBOL:
                                        NAME:
                                            print
                                        SOURCE:
                                            GLOBAL:
                                                print
                                ARGS:
                                    LITERAL:
                                        "hello"
                            LAMBDA:
                                NUM-ARGS:
                                    0
                                NUM-UPVARS:
                                    0
                                NUM-DECLARATIONS:
                                    0
                                ARGS:
                                BODY:
                                    BLOCK-EXPRESSION:
                                        FN-CALL:
                                            RECEIVER:
                                                SYMBOL:
                                                    NAME:
                                                        print
                                                    SOURCE:
                                                        GLOBAL:
                                                            print
                                            ARGS:
                                                LITERAL:
                                                    "world"
                                        LITERAL:
                                            10
                                BINDINGS:
                    BINDINGS:
            ARGS:
    ARGS:
#emit
CreateClosure(0)
Jump(15)
LoadConstant(0)
GetGlobal(Symbol(8))
Execute(1)
Pop
CreateClosure(1)
Jump(14)
LoadConstant(1)
GetGlobal(Symbol(8))
Execute(1)
Pop
IntLit(10)
Ret
Ret
Execute(0)
Execute(0)
#output
hello
world
#result
10

#test empty function
fn() {}
#bind
